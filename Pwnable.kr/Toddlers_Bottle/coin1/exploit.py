from pwn import *

def playOnce(process, count):
    l = 0
    r = p.recvuntil(" C").decode()
    print(f"r debug: {r}")
    r=int(r[2:-1])
    print(f"r debug: {r}")
    c = int(p.recvline().decode()[1:])
    weight =0
    while (l<r):
        if(weight==9):
            print("\nCorrect weight found!!!\n breaking out\n")
            break
        print(f"Amount of attempts left: {c}")
        print(f"Coin amount: '{r}'")
        print(f"Current right limit is : {r}")
        print(f"Current left limit is : {l}")
        m= ((l +r) // 2 ) 
        print(f"Current middle limit is : {m}")
        weight = getWeight(l,m, p)
        hasCounterfeit = weight %10 != 0
        if(hasCounterfeit):
            r =m;
            c-=1
        elif(not hasCounterfeit):
            l = m+1;
            c-=1
    print(f"Current amount of attempts after loop exit: {c}")
    while(c > -1):
        print(f"Some attempts are left. Spamming correct index at {r}")
        p.sendline(str(r))
        print(p.recvline())
        c-=1
    print("finished spamming")
    return count+1;
def sendWeight(start, end):
    output = ""
    for i in range(start, end + 1):  # inclusive
        output += str(i) + " "
    output= output.strip()
    print(f"-------------------------\nsending coin index range:\n{output}\n ----------------------------\n")
    return output
def getWeight(start, end, process):
    process.sendline(sendWeight(start,end))
    weight = process.recvline().decode()[:-1]
    weight = int(weight)
    print(f"Weight for given range is: {weight}")
    return weight
if __name__ == "__main__":
    p = remote("pwnable.kr", 9007)
    print(p.recvuntil(" 3 sec... -\n") )
    print(p.recvline())
    count = 0;
    while(count <100):
        print(f"Playing the #{count+1} game")
        count = playOnce(p, count)
    p.interactive()
